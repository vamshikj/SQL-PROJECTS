CREATE DATABASE EMPLOYEEDETAILS

CREATE TABLE EMPLOYEE_TABLE
(
EMPLOYEE_ID INT,
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
SALARY INT,
JOINING_DATE DATETIME,
DEPARTMENT CHAR(50),
GENDER CHAR (50)
)

SELECT * FROM EMPLOYEE_TABLE

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (1,'Vikas','Ahlawat',600000,'2/12/2013 11:16','IT','Male')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (2,'Nikita','Jain',530000,'2/14/2013 11:16','HR','Female')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (3,'Ashish','Kumar',1000000,'2/14/2013 11:16','IT','Male')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (4,'Nikhil','Sharma',480000,'2/15/2013 11:16','HR','Male')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (5,'Anish','Kadian',500000,'2/16/2013 11:16','PAROLL','Male')

SELECT * FROM EMPLOYEE_TABLE

SELECT FIRST_NAME FROM EMPLOYEE_TABLE

SELECT LAST_NAME FROM EMPLOYEE_TABLE

SELECT UPPER(FIRST_NAME) AS FIRST_NAME  
FROM EMPLOYEE_TABLE

SELECT LOWER(FIRST_NAME) AS FIRST_NAME 
FROM EMPLOYEE_TABLE

SELECT CONCAT(FIRST_NAME,' ' ,LAST_NAME) AS NAME 
FROM EMPLOYEE_TABLE

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME = 'Vikas'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME like 'A%'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME like '%H'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME LIKE '[A-P]%'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME NOT LIKE '[A-P]%'

SELECT * FROM EMPLOYEE_TABLE
WHERE GENDER LIKE '_ _ _le'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME LIKE 'A____'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME LIKE '%[Vik%as]%'

SELECT DEPARTMENT
FROM EMPLOYEE_TABLE

SELECT MAX(SALARY) AS HIGHEST_SALARY 
FROM EMPLOYEE_TABLE

SELECT MIN(SALARY) AS LOWEST_SALARY
FROM EMPLOYEE_TABLE

SELECT FORMAT(JOINING_DATE, 'dd MMM yyyy') AS FormattedJoiningDate
FROM EMPLOYEE_TABLE

SELECT FORMAT(JOINING_DATE, 'yyyy/mm/dd') AS FormattedJoiningDate
FROM EMPLOYEE_TABLE

SELECT YEAR(JOINING_DATE) AS JOINING_YEAR
FROM EMPLOYEE_TABLE


SELECT MONTH(JOINING_DATE) AS MONTH
FROM EMPLOYEE_TABLE 

SELECT GETDATE() AS CurrentDate
FROM EMPLOYEE_TABLE

SELECT GETUTCDATE()
FROM EMPLOYEE_TABLE

SELECT FIRST_NAME, GETDATE() AS CurrentDate, JOINING_DATE,DATEDIFF(MONTH, JOINING_DATE,
       GETDATE()) AS MonthsSinceJoining
FROM EMPLOYEE_TABLE

SELECT FIRST_NAME, GETDATE() AS CurrentDate, JOINING_DATE, DATEDIFF(DAY, JOINING_DATE, 
       GETDATE()) AS DaysSinceJoining
FROM EMPLOYEE_TABLE
    
SELECT * FROM EMPLOYEE_TABLE
WHERE YEAR(JOINING_DATE) = 2013

SELECT * FROM EMPLOYEE_TABLE
WHERE MONTH(JOINING_DATE) = 1

SELECT COUNT(*) AS EmployeeCount
FROM EMPLOYEE_TABLE

SELECT TOP 1 * FROM EMPLOYEE_TABLE

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME IN ('VIKAS' , 'ANISH' , 'NIKHIL')

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME NOT IN ('VIKAS' , 'ANISH' , 'NIKHIL') 

SELECT FIRST_NAME,
    CASE 
        WHEN Gender = 'Male' THEN 'M'
        WHEN Gender = 'Female' THEN 'F'
        ELSE 'Unknown'
    END AS GenderAbbreviation
FROM EMPLOYEE_TABLE

SELECT CONCAT('Hello ', FIRST_NAME) AS PRIFIXED
FROM EMPLOYEE_TABLE


SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY > 600000

SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY < 700000

SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY BETWEEN 500000 AND 600000


CREATE TABLE PROJECT_DETAILS
(
PROJECT_ID INT,
EMPLOYEE_ID INT,
PROJECT_NAME CHAR(50),
)

SELECT * FROM PROJECT_DETAILS

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (1,1,'TASK TRACK')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (2,1,'CLP')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (3,1,'SURVEY MANAGEMENT')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (4,2,'HR MANAGEMENT')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (5,3,'TASK TRACK')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (6,3,'GRS')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (7,3,'DDS')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (8,4,'HR MANAGER')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (9,6,'GL MANAGEMENT')

SELECT * FROM PROJECT_DETAILS


SELECT DEPARTMENT , SUM(SALARY) 
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY

SELECT DEPARTMENT , SUM(SALARY) 
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY ASC

SELECT DEPARTMENT , SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY DESC


SELECT  DEPARTMENT , SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEE_TABLE 
GROUP BY DEPARTMENT

SELECT DEPARTMENT, COUNT(DISTINCT DEPARTMENT) AS TotalDepartments,
    SUM(Salary) AS TotalSalary
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT

SELECT DEPARTMENT , AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT


SELECT DEPARTMENT , MAX(SALARY) AS MAXIMUM_SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY ASC

SELECT DEPARTMENT , MIN(SALARY) AS MINIMUM_SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY DESC

SELECT * FROM EMPLOYEE_TABLE
JOIN PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID

SELECT FIRST_NAME AS EmployeeName, PROJECT_NAME   
FROM EMPLOYEE_TABLE
JOIN 
PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID =PROJECT_DETAILS.EMPLOYEE_ID
ORDER BY FIRST_NAME
    

SELECT FIRST_NAME , PROJECT_NAME
FROM EMPLOYEE_TABLE 
JOIN
PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID =PROJECT_DETAILS.EMPLOYEE_ID

SELECT * FROM EMPLOYEE_TABLE
CROSS JOIN
PROJECT_DETAILS








1
1
1
11
1





CREATE DATABASE EMPLOYEEDETAILS

CREATE TABLE EMPLOYEE_TABLE
(
EMPLOYEE_ID INT,
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
SALARY INT,
JOINING_DATE DATETIME,
DEPARTMENT CHAR(50),
GENDER CHAR (50)
)

SELECT * FROM EMPLOYEE_TABLE

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (1,'VIKAS','AHLAWAT',600000,'2/12/2013 11:16','IT','MALE')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (2,'NIKITA','JAIN',530000,'2/14/2013 11:16','HR','FEMALE')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (3,'ASHISH','KUMAR',1000000,'2/14/2013 11:16','IT','MALE')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (4,'NIKHIL','SHARMA',480000,'2/15/2013 11:16','HR','MALE')

INSERT INTO EMPLOYEE_TABLE (EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT,GENDER)
VALUES (5,'ANISH','KADIAN',500000,'2/16/2013 11:16','PAROLL','MALE')

SELECT * FROM EMPLOYEE_TABLE

SELECT FIRST_NAME FROM EMPLOYEE_TABLE

SELECT LAST_NAME FROM EMPLOYEE_TABLE

SELECT UPPER(FIRST_NAME) AS FIRST_NAME
FROM EMPLOYEE_TABLE

SELECT LOWER(FIRST_NAME) AS FIRST_NAME 
FROM EMPLOYEE_TABLE

SELECT CONCAT(FIRST_NAME,' ' ,LAST_NAME) AS EMPLOYEE_NAME 
FROM EMPLOYEE_TABLE

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME = 'VIKAS'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME like 'A%'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME like '%H'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME LIKE '[A-P]%'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME NOT LIKE '[A-P]%'


SELECT * FROM EMPLOYEE_TABLE
WHERE GENDER LIKE '____LE'

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME LIKE 'A_____'

SELECT DEPARTMENT
FROM EMPLOYEE_TABLE

SELECT MAX(SALARY) AS HIGHEST_SALARY 
FROM EMPLOYEE_TABLE

SELECT MIN(SALARY) AS LOWEST_SALARY
FROM EMPLOYEE_TABLE

SELECT JOINING_DATE FROM EMPLOYEE_TABLE

SELECT JOINING_DATE FROM EMPLOYEE_TABLE


SELECT GETDATE() FROM EMPLOYEE_TABLE

SELECT YEAR(JOINING_DATE) FROM EMPLOYEE_TABLE

SELECT MONTH(JOINING_DATE) FROM EMPLOYEE_TABLE

SELECT GETDATE()
FROM EMPLOYEE_TABLE

SELECT GETUTCDATE()
FROM EMPLOYEE_TABLE

SELECT * FROM EMPLOYEE_TABLE
WHERE YEAR(JOINING_DATE) LIKE '2013'

SELECT COUNT(*)
FROM EMPLOYEE_TABLE

SELECT TOP 1 * FROM EMPLOYEE_TABLE

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME IN ('VIKAS' , 'ANISH' , 'NIKHIL')

SELECT * FROM EMPLOYEE_TABLE
WHERE FIRST_NAME NOT IN ('VIKAS' , 'ANISH' , 'NIKHIL') 

SELECT CONCAT(FIRST_NAME , LAST_NAME) 
FROM EMPLOYEE_TABLE

SELECT FIRST_NAME , GENDER
FROM EMPLOYEE_TABLE

SELECT FIRST_NAME , GENDER
FROM EMPLOYEE_TABLE 

SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY > 600000

SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY < 700000

SELECT * FROM EMPLOYEE_TABLE
WHERE SALARY BETWEEN 500000 AND 600000


CREATE TABLE PROJECT_DETAILS
(
PROJECT_ID INT,
EMPLOYEE_ID INT,
PROJECT_NAME CHAR(50),
)

SELECT * FROM PROJECT_DETAILS

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (1,1,'TASK TRACK')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (2,1,'CLP')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (3,1,'SURVEY MANAGEMENT')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (4,2,'HR MANAGEMENT')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (5,3,'TASK TRACK')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (6,3,'GRS')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (7,3,'DDS')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (8,4,'HR MANAGER')

INSERT INTO PROJECT_DETAILS (PROJECT_ID,EMPLOYEE_ID,PROJECT_NAME)
VALUES (9,6,'GL MANAGEMENT')

SELECT * FROM PROJECT_DETAILS


SELECT DEPARTMENT , SUM(SALARY) AS SALARY 
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY

SELECT DEPARTMENT , SUM(SALARY) AS SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY ASC

SELECT DEPARTMENT , SALARY AS SALARY
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY DESC

SELECT  DEPARTMENT , SUM(SALARY)
FROM EMPLOYEE_TABLE 
GROUP BY DEPARTMENT

SELECT DEPARTMENT , AVG(SALARY)
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT,SALARY
ORDER BY SALARY ASC

SELECT DEPARTMENT , MAX(SALARY) 
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT ,SALARY
ORDER BY SALARY ASC

SELECT DEPARTMENT , MIN(SALARY) 
FROM EMPLOYEE_TABLE
GROUP BY DEPARTMENT , SALARY
ORDER BY SALARY ASC

SELECT * FROM  EMPLOYEE_TABLE
JOIN
PROJECT_DETAILS
ON 
EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID

 
ALTER TABLE EMPLOYEE_TABLE
ADD EMPLOYEE_NAME VARCHAR(50)
UPDATE EMPLOYEE_TABLE
SET EMPLOYEE_NAME = CONCAT(FIRST_NAME, ' ', LAST_NAME)

SELECT * FROM EMPLOYEE_TABLE

SELECT EMPLOYEE_NAME, PROJECT_NAME
FROM EMPLOYEE_TABLE
JOIN
PROJECT_DETAILS
ON 
EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID
ORDER BY FIRST_NAME


SELECT FIRST_NAME , PROJECT_NAME
FROM EMPLOYEE_TABLE
JOIN PROJECT_DETAILS
ON  EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID
SELECT FIRST_NAME , PROJECT_NAME
FROM EMPLOYEE_TABLE
LEFT JOIN PROJECT_DETAILS
ON  EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID
UNION ALL
SELECT  NULL AS FirstName,PROJECT_NAME   
FROM PROJECT_DETAILS
WHERE EMPLOYEE_ID IS NULL
ORDER BY FIRST_NAME   


SELECT EMPLOYEE_NAME, PROJECT_NAME
FROM EMPLOYEE_TABLE
LEFT OUTER JOIN 
PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID
(SELECT DISTINCT PROJECT_NAME FROM PROJECT_DETAILS) 
ORDER BY EMPLOYEE_NAME, PROJECT_NAME
   

SELECT EMPLOYEE_NAME, PROJECT_NAME
FROM EMPLOYEE_TABLE
FULL OUTER JOIN 
PROJECT_DETAILS 
ON EMPLOYEE_TABLE.EMPLOYEE_ID =PROJECT_DETAILS.EMPLOYEE_ID
ORDER BY EMPLOYEE_NAME, PROJECT_NAME
    

SELECT PROJECT_NAME, FIRST_NAME AS EMPLOYEE_NAME
FROM EMPLOYEE_TABLE
JOIN 
PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID =PROJECT_DETAILS.EMPLOYEE_ID
WHERE PROJECT_NAME IN (
SELECT PROJECT_NAME
FROM PROJECT_DETAILS
GROUP BY PROJECT_NAME
HAVING COUNT(DISTINCT EMPLOYEE_ID) > 1
)


SELECT * FROM EMPLOYEE_TABLE

SELECT EMPLOYEE_NAME, PROJECT_NAME
FROM EMPLOYEE_TABLE
JOIN
PROJECT_DETAILS
ON EMPLOYEE_TABLE.EMPLOYEE_ID = PROJECT_DETAILS.EMPLOYEE_ID
GROUP BY PROJECT_NAME, EMPLOYEE_NAME
HAVING COUNT(EMPLOYEE_NAME) > 1


SELECT * FROM EMPLOYEE_TABLE
CROSS JOIN
PROJECT_DETAILS


